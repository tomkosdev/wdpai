-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.maps
(
    id integer NOT NULL DEFAULT nextval('mapspk'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    date date,
    likes integer DEFAULT 0,
    image character varying(255) COLLATE pg_catalog."default",
    uploader character varying COLLATE pg_catalog."default" DEFAULT ''::character varying,
    pk3file character varying COLLATE pg_catalog."default" DEFAULT ''::character varying,
    CONSTRAINT maps_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id integer NOT NULL,
    role character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT permissions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_credentials
(
    id integer NOT NULL DEFAULT nextval('detailspk'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT details_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_map_likes
(
    id_user integer NOT NULL,
    id_map integer NOT NULL,
    CONSTRAINT user_map_likes_pkey PRIMARY KEY (id_user, id_map)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('userpk'::regclass),
    role integer DEFAULT 2,
    credential integer NOT NULL,
    nickname character varying COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_pk UNIQUE (credential)
);

ALTER TABLE IF EXISTS public.user_map_likes
    ADD CONSTRAINT "FK 1" FOREIGN KEY (id_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.user_map_likes
    ADD CONSTRAINT "FK 2" FOREIGN KEY (id_map)
    REFERENCES public.maps (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT "FK 1" FOREIGN KEY (role)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT "FK 2" FOREIGN KEY (credential)
    REFERENCES public.user_credentials (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;
CREATE INDEX IF NOT EXISTS users_pk
    ON public.users(credential);

END;